@model WebCrawl.WebApplication.viewModels.DetailsViewModel
@{
    ViewData["Title"] = "Index";
}

<div>
    <h2>Result for @Model.BaseUrl</h2>

    <div class="pt-3">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Url</th>
                    <th>Response Time</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 0;
                    @foreach (var result in Model.Pages)
                    {
                        i++;
                        <tr class="table-result-link">
                            <td>@i</td>
                            <td>@result.Url</td>
                            <td>@result.ResponseTime.TotalMilliseconds.ToString("0")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center">
        @{
            <input type="button"
                   class="btn btn-secondary m-1 p-2"
                   onclick="window.location.href = '@Url.Action("Index", "Details", new { @id = Model.Id, @curPage = Model.CurrentPage-1 })'"
                   value="Previous"
                   @(Model.CurrentPage == 1 ? "disabled" : "")>


            if (Model.MaxPages > Model.CurrentPage)
            {
                for (int pagesCount = 1; pagesCount <= Model.TotalPages && pagesCount <= Model.MaxPages; pagesCount++)
                {
                    <a class="@(pagesCount == Model.CurrentPage ? "btn-secondary" : "btn-outline-secondary") btn m-1 p-2"
                       asp-action="Index"
                       asp-controller="Details"
                       asp-route-id="@Model.Id"
                       asp-route-curPage="@pagesCount">
                        @pagesCount
                    </a>
                }
            }
            else
            {
                var pageRange = Model.CurrentPage - 3;
                for (int pagesCount = pageRange; pagesCount <= Model.TotalPages && pagesCount < Model.MaxPages + pageRange; pagesCount++)
                {
                    <a class="@(pagesCount == Model.CurrentPage ? "btn-secondary" : "btn-outline-secondary") btn m-1 p-2"
                       asp-action="Index"
                       asp-controller="Details"
                       asp-route-id="@Model.Id"
                       asp-route-curPage="@pagesCount">
                        @pagesCount
                    </a>
                }
            }

            <input type="button"
                   class="btn btn-secondary m-1 p-2"
                   onclick="window.location.href = '@Url.Action("Index", "Details", new { @id = Model.Id, @curPage = Model.CurrentPage+1 })'"
                   value="Next"
                   @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")>
        }
    </div>


</div>

