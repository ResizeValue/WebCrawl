// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCrawl.Repository;

namespace WebCrawl.Repository.Migrations
{
    [DbContext(typeof(WebCrawlDbContext))]
    [Migration("20211111134125_LocationLinkFields")]
    partial class LocationLinkFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebCrawl.Entity.Models.CrawlingResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BasePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CrawlingResults");
                });

            modelBuilder.Entity("WebCrawl.Entity.Models.ParsedHtmlDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CrawlingResultId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCrawlingLink")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSitemapLink")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("ResponseTime")
                        .HasColumnType("time");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CrawlingResultId");

                    b.ToTable("ParsedHtmlDocuments");
                });

            modelBuilder.Entity("WebCrawl.Entity.Models.ParsedHtmlDocument", b =>
                {
                    b.HasOne("WebCrawl.Entity.Models.CrawlingResult", null)
                        .WithMany("Pages")
                        .HasForeignKey("CrawlingResultId");
                });

            modelBuilder.Entity("WebCrawl.Entity.Models.CrawlingResult", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
